import { Component, ReactNode, ReactChild } from 'react';
export interface FormItemProps {
    style?: any;
    label?: string | ReactNode;
    labelWidth?: number;
    hasLine?: boolean;
    children?: ReactChild[] | ReactChild;
    validate?: 'required' | 'phone' | 'date' | 'email' | Function | Array<Function>;
    name?: string;
    error?: Array<string>;
    hiddenError?: boolean;
    __valid?: boolean;
    __firstErrorIndex?: null | number;
}
interface FormItemState {
}
export declare class FormItem extends Component<FormItemProps, FormItemState> {
    static defaultProps: {
        style: {};
        label: string;
        labelWidth: any;
        hasLine: boolean;
        validate: null;
        name: string;
        error: never[];
        __valid: boolean;
        hiddenError: boolean;
    };
    static displayName: string;
    private animated;
    constructor(props: any);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: any): void;
    isShowError(props: any): boolean;
    renderItem: () => JSX.Element;
    render(): JSX.Element;
}
export {};
