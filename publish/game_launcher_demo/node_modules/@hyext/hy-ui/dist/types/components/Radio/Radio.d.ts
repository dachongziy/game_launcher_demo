import React, { Component, ReactChild, ReactElement } from 'react';
interface RadioProps {
    style?: any;
    iconPosition?: 'left' | 'right';
    checkedIcon?: ReactElement<any>;
    uncheckedIcon?: ReactElement<any>;
    value?: any;
    onChange?: Function;
    children?: ReactChild[] | ReactChild;
}
export default class Radio extends Component<RadioProps> {
    static Item?: any;
    static displayName: string;
    static defaultProps: {
        style: {};
        value: undefined;
        onChange: null;
        iconPosition: string;
        checkedIcon: JSX.Element;
        uncheckedIcon: JSX.Element;
    };
    constructor(props: any);
    handleChange: (value: any) => void;
    /**
     * 检查是否选中
     */
    verifyChecked(props: any): boolean;
    renderChildren(): (React.DetailedReactHTMLElement<{
        key: number;
        iconPosition: "left" | "right" | undefined;
        checked: boolean;
        onChange: (value: any) => void;
        checkedIcon: React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | undefined;
        uncheckedIcon: React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | undefined;
    }, HTMLElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<HTMLElement>, HTMLElement>)[] | undefined;
    render(): JSX.Element;
}
export {};
