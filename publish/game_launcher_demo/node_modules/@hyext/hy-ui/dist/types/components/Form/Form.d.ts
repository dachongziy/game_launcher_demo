import React, { Component } from 'react';
import { ViewStyle } from 'react-native';
import { FormItem } from './FormItem';
import { ValidateMapping, Result } from "../../common/utils/validator";
export interface FormProps {
    testID?: string;
    style?: ViewStyle;
    data?: Object;
}
interface FormState {
    validateMapping: ValidateMapping;
}
export declare class Form extends Component<FormProps, FormState> {
    static displayName: string;
    static defaultProps: {
        style: {};
    };
    static Item: typeof FormItem;
    constructor(props: any);
    validate(): Result;
    componentWillReceiveProps(nextProps: any): void;
    init(props: any): {};
    getValidateMap(formItemProps: any): {
        name: any;
        validate: any;
        error: any;
        result: any;
    } | undefined;
    renderChildren(): (React.DetailedReactHTMLElement<React.HTMLAttributes<HTMLElement>, HTMLElement> | React.FunctionComponentElement<{
        __valid: boolean;
        __firstErrorIndex: number | null;
    }>)[] | null | undefined;
    render(): JSX.Element;
}
export {};
